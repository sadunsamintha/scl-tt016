#activation compatible with the post package
activation=com.sicpa.standard.sasscl.business.activation.impl.ActivationWithPostPackage

#jmx read only
statsMBean=com.sicpa.standard.sasscl.monitoring.mbean.scl.SclApp
#statistics that populate the jmx read only bean
MBeanStatsDelegate=com.sicpa.standard.sasscl.monitoring.mbean.scl.SclAppBeanStatistics
#jmx remote control
remoteControlMBean=com.sicpa.standard.sasscl.monitoring.mbean.scl.RemoteControlScl

#used by StandardActivationBehavior to validate the product, code type mismatch etc..., do nothing in SCL
productValidator=com.sicpa.standard.sasscl.business.activation.impl.activationBehavior.standard.validator.NoProductValidator

#printer controller from std component
stdPrinterController=com.sicpa.standard.printer.controller.internal.PrinterController
#printerSimulatorController=com.sicpa.standard.sasscl.devices.printer.simulator.PrinterSimulator

#printer adaptor
stdPrinterAdaptor=com.sicpa.standard.sasscl.devices.printer.impl.PrinterAdaptor
#printerSimulatorAdaptor=com.sicpa.standard.sasscl.devices.printer.simulator.PrinterAdaptorSimulator


#contains the parameters of the application
globalConfig=com.sicpa.standard.sasscl.config.GlobalConfigSCL

#scheduled job related to the remote server, like getting the encoder periodically
remoteServerSheduledJobs=com.sicpa.standard.sasscl.controller.scheduling.RemoteServerScheduledJobsSCL
#contains the scheduler timer configuration
schedulerConfig=com.sicpa.standard.sasscl.controller.scheduling.SchedulerConfigSCL

#manage the generation of sicpadata, and send them to the printer
coding=com.sicpa.standard.sasscl.business.coding.impl.Coding
#check if the subsystem id is valid for the encoder
encoderSubsystemIdValidator=com.sicpa.standard.sasscl.business.coding.validator.EncoderSubsystemIdValidator
#check if the year is valid for the encoder
encoderYearValidator=com.sicpa.standard.sasscl.business.coding.validator.NoEncoderValidator

remoteServerSimulator=com.sicpa.standard.sasscl.devices.remote.simulator.RemoteServerSimulator

#bad code tracking, can handle multiple camera/printer modules(=>PostPackageBehavior)
postPackage=com.sicpa.standard.sasscl.business.postPackage.PostPackage
#bad code tracking for a camera/printer module
postPackageBehavior=com.sicpa.standard.sasscl.business.postPackage.PostPackageBehavior
postPackageAutoRegistering=com.sicpa.standard.sasscl.business.postPackage.PostPackageAutoRegistering

#how to tell the plc not to print in refeed mode
noPrintPlcSetter=com.sicpa.standard.sasscl.devices.plc.onconnectvarsetter.impl.NoPrintVarSetter
