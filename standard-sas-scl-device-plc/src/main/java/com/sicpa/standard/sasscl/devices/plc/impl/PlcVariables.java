/**
 * Author	: YYang
 * Date		: Oct 14, 2010
 *
 * Copyright (c) 2010 SICPA Security Solutions, all rights reserved.
 *
 */
package com.sicpa.standard.sasscl.devices.plc.impl;

import java.util.List;

import com.sicpa.standard.sasscl.devices.plc.PlcVariableMap;

/**
 * Enumeration to define default PLC variables
 * 
 */
public enum PlcVariables {

	// --------- LINE PARAMETERS --------------//

	PARAM_EXPORT_MODE_ENABLED,

	PARAM_MAINTENANCE_MODE_ENABLED,

	PARAM_REFEED_MODE_ENABLED,

	PARAM_LINE_IS_ACTIVE,

	PARAM_LINE_COM_STRUC_STORED_IN_RAM,

	PARAM_COUNTER_FILTER_TYPE,

	PARAM_PRODUCT_DETECTOR_FILTER_TYPE,

	PARAM_CAMERA_DISTANCE_TYPE,

	PARAM_CAMERA_LENGTH_TYPE,

	PARAM_VALIDE_CODE_TIMEOUT_TYPE,

	PARAM_AUDIO_VISUAL_EMISSION_DISTANCE_TYPE,

	PARAM_AUDIO_VISUAL_EMISSION_LENGTH_TYPE,

	PARAM_PRINTER_DISTANCE_TYPE,

	PARAM_PRINTER_LENGTH_TYPE,

	PARAM_PC_EJECTION_RECEPTION_DISTANCE_TYPE,

	PARAM_PC_EJECTION_RECEIPTION_LENGTH_TYPE,

	PARAM_PROD_CONTROL_DETECTOR_FILTER_TYPE,

	PARAM_EJECTION_EMISSION_DISTANCE_TYPE,

	PARAM_EJECTION_EMISSION_LENGTH_TYPE,

	PARAM_JAVA_NTF_DISTANCE_TYPE,

	PARAM_COUNTER_FILTER,

	PARAM_PRODUCT_DETECTOR_FILTER,

	PARAM_CAMERA_DISTANCE,

	PARAM_CAMERA_LENGTH,

	PARAM_VALIDE_CODE_TIMEOUT,

	PARAM_AUDIO_VISUAL_EMISSION_DISTANCE,

	PARAM_AUDIO_VISUAL_EMISSION_LENGTH,

	PARAM_PRINTER_DISTANCE,

	PARAM_PRINTER_LENGTH,

	PARAM_PC_EJECTION_RECEPTION_DISTANCE,

	PARAM_PC_EJECTION_RECEPTION_LENGTH,

	PARAM_PROD_CONTROL_DETECTOR_FILTER,

	PARAM_EJECTION_EMISSION_DISTANCE,

	PARAM_EJECTION_EMISSION_LENGTH,

	PARAM_JAVA_NTF_DISTANCE,

	PARAM_ENCODER_RESOLUTION,

	PARAM_SHAPE_DIAMETER,

	PARAM_MAX_CONSECUTIVE_INVALID_CODES,

	PARAM_STATS_SMALL_THRESHOLD,

	PARAM_STATS_SMALL_REJECTION_LIMIT,

	PARAM_STATS_LARGE_THRESHOLD,

	PARAM_STATS_LARGE_REJECTION_LIMIT,

	PARAM_TRIGGER_CONTROL_MAX_DIFF_VALUE,

	PARAM_TRIGGER_CONTROL_MAX_CHECKS_VALUE,

	PARAM_TRIGGER_CONTROL_MAX_ABS_ERRORS,

	PARAM_ENCODER_MODULE_FOLD_EVALUATION,

	PARAM_TEST_ADDITIONAL_CHECK,

	PARAM_TRIGGER_ACT_ON_FAILING_EDGE,

	PARAM_SIMULATE_PC_EJECTION_IF_ADD_CHECK,

	PARAM_TRIG_CAMERA_IF_PC_EJECTION_SIMULATED,

	PARAM_INHIBIT_PC_EJECTION_IF_ADD_CHECK,

	PARAM_TRIG_EJECTION_ONLY_FOR_SICPA_EJECTIONS,

	PARAM_TRIG_AUDIO_VISUAL_ONLY_FOR_SICPA_EJECTIONS,

	PARAM_SYSTEM_TYPE,

	PARAM_ENCODER_USED,

	PARAM_INDEXED_PRODUCTS,

	PARAM_INHIBIT_PRINTER,

	PARAM_INHIBIT_CAMERA,

	PARAM_INHIBIT_PC_EJECTION_RECEPTION,

	PARAM_INHIBIT_EJECTION_EMISSION,

	PARAM_INHIBIT_EJECTION_AUDIO_VISUALS,

	PARAM_INHIBIT_PC_EJECTION_SIMULATION,

	PARAM_INHIBIT_JAVA_NTF_EMISSION,

	PARAM_INHIBIT_LBL_APP_OR_AIR_DRYER,

	PARAM_DRS_TYPE,

	PARAM_EJECTION_TYPE,

	PARAM_WAR_TEMP_IJ_CAB_LVL,

	PARAM_WAR_TEMP_IJ_INK_LVL,

	PARAM_ERR_TEMP_IJ_CAB_LVL,

	PARAM_ERR_TEMP_IJ_INK_LVL,

	PARAM_WAR_FANS_PRINTER_CAB_MIN_FREQ,

	PARAM_WAR_FANS_PRINTER_CAB_MAX_FREQ,

	PARAM_FANS_TEMP_ON_THRESHOLD_PRINTER,

	PARAM_FANS_TEMP_OFF_DELTA_HYST_PRINTER,

	PARAM_INK_VORTEX_ON_THRESHOLD,

	PARAM_INK_VORTEX_OFF_DELTA_HYSTERESIS,

	// ----------- ERROR & WARNING NOTIFICATIONS ------------//

	ERR_EMERGENCY_STOP,

	ERR_COOLING_SYSTEM,

	ERR_TRIGGER_FAULT,

	ERR_LIFE_CHECK,

	ERR_PLC_FAULT,

	ERR_ENCODER_FAULT,

	ERR_CONSECUTIVE_INVLD_CODES,

	// ---------- REQUESTS ----------//

	REQUEST_START,

	REQUEST_RUN,

	REQUEST_STOP,

	REQUEST_MAINTENANCE_START,

	REQUEST_MAINTENANCE_STOP,

	// -------- SENDING WARNING & ERROR TO PLC VAR ----//
	REQUEST_JAVA_WARNINGS_AND_ERRORS_REGISTER,

	// -------- CABINET NOTIFICATIONS --------//

	// warnings and errors from cabinet
	NTF_WAR_ERR_REGISTER,

	NTF_VERSION_HIGH,

	NTF_VERSION_MEDIUM,

	NTF_VERSION_LOW,

	// ---------- LINE NOTIFICATIONS ----------//

	NTF_PRODUCT_DETECTOR_TRIGS,

	NTF_LINE_SPEED,

	NTF_LINE_STATE,

	// warnings and errors from line
	NTF_LINE_WAR_ERR_REGISTER,

	NTF_PLC_VERSION,
	
	NTF_PRODUCTS_FREQ,
	
	NTF_COUNTER_TRIGS

	;

	/**
	 * 
	 * return name of the PLC variable
	 * 
	 * @return
	 */
	public String getVariableName() {
		return PlcVariableMap.get(this.name());
	}

	
	public List<String> getLineVariableNames() {
		return PlcVariableMap.getLineVariableName(getVariableName());
	}

}
