# DEVICES BEHAVIOR 
########################################

# standard/simulator
remoteServer.behavior=simulator
camera.behavior=simulator
printer.behavior=simulator
plc.behavior=simulator

# standard/simulator/none
brs.behavior=simulator
bis.behavior=none

# use barcode reader device to select the SKU to produce - true/false
useBarcodeReader=false


# PLC
################################################################################

# plc:jb://<local computer AMS Net Id>#<PLC AMS Net Id>@<PLC IP>
plc.ip=plc:jb://192.168.1.1.1.1#5.5.25.42.69.100@192.168.1.3/lifeCheckInterval=1000;lifeCheckTimeout=5000;adsRuntimePort=801



#server.url=jnp://mpcc.tt080int.dev.sicpa.io:8080
#server.url=jnp://dms.tt080int.dev.sicpa.io:9990
#server.url=jnp://mscascl.tt080int.dev.sicpa.io:1099


# BLOB DETECTION
################################################################################

# Blob detection (or ink detected) has 3 modes : NONE, ALWAYS and STANDARD.
# NONE means that app will disable blob detection. The app won't distinguish a product without ink from one with - both
# products will be counted as invalid.
# ALWAYS means that the blob detection will be enabled for every SKU.
# STANDARD means that the blob detection will be enabled according to whether a product is compliant or not
blobDetection.mode=ALWAYS
#if this property is set to false, then the blob pattern is not printed.
blobDetection.printed=false


# PRINTER
################################################################################

#Leibinger user level
leibinger.user.level.admin=5
leibinger.user.level.service=2
leibinger.user.level.ocs=3
leibinger.user.level.sicpa=4
leibinger.user.level.ij=0
leibinger.user.level.engineer=0
user.leibinger.level.admin=1


# should we switch off printer if we exit the app?
exit.printer.switchoff=true


# PRINTER EXTENDED CODE CONFIG
################################################################################
dm.format=DM_8x18
dm.encoding=ASCII
dm.orientation=REVERSE
blob.position=RIGHT
#BLOB_2D
blob.type=BLOB_2D

hrd.enable=true
text1.position=RIGHT
text1.length=4
text2.position=BELOW
text2.length=4

server.simulator.crypto.enabled=false

# REMOTE SERVER (MASTER SCL OR DMS)
################################################################################
server.machine.user=005sas
server.machine.password=005sas

# production data successfully sent to remote server older than X days will be deleted
cleanUpSendDataThreshold_day=30
# maximum number of products to send with each batch
productionSendBatchSize=5000

# minimum number of encoders stored locally. If number of encoders is equal or less than value defined, the
# app will make a request for a number of encoders equal to the number of encoders defined by the property
# "requestNumberEncoders" defined below
minEncodersThreshold=1
# number of encoders requested by the app, for each request.
requestNumberEncoders=2

# list of code types for which we don't want to download encoders. This property is important if the app is
# running on SAS mode, because we don't need and want to download encoders for the code types produced - comma
# separated values
encoder.download.codetype.filter=2,4,7

#codeTypeId=1

# GLOBAL PROPERTIES 
########################################
# name of the customization
custo.id=TT080
# line identifier which is displayed on the header of the GUI. If blank, the lineID will take the subsystem value
# received from the server. Can take any value
lineId=513
# subsystem received from the server. Shouldn't be defined
subsystemId=513
# number of lines managed by the app. Usually there's only 1 line
line.count=3
# crypto password. Don't change
sicpadataPassword=N0nPrd-Dominican Republic*2o19


# Start production timeout. How long (in seconds) the application waits for devices to start before timing out.
startProduction.timeoutInSec=45

# language of the app - fr/en/es
language=es

# ALERTS BEHAVIOR
########################################

# all the following alerts work more or less in the same way.
#
# the ".enabled" specifies the whether the alert is enabled or disabled - true/false
# the ".delayInSec" property specifies the time in seconds between successive alert evaluations
# the ".maxUnreadCount" and ".threshold" properties, specify the max number of errors after which the alert is raised
# the ".sampleSize" property specifies the number of products after which the alert is evaluated

alert.cameraCount.error.delayInSec=5
alert.cameraCount.error.maxUnreadCount=5
alert.cameraCount.error.sampleSize=100
alert.cameraCount.error.enabled=false

alert.cameraCount.warning.delayInSec=5
alert.cameraCount.warning.maxUnreadCount=5
alert.cameraCount.warning.sampleSize=100
alert.cameraCount.warning.enabled=true

# BRS UNREAD BARCODE WARNING
alert.unreadbarcodes.warning.enable=true
alert.unreadbarcodes.warning.threshold=100

# BRS UNREAD BARCODE ERROR
alert.unreadbarcodes.error.enable=true
alert.unreadbarcodes.error.threshold=105

# BRS WRONG BARCODE
alert.wrongBarcode.enable=true
alert.wrongBarcode.error.threshold=10
# time in milliseconds between successive alert evaluations. 60000 milliseconds = 1 minute
alert.wrongBarcode.window.time=60000

# DUPLICATE CODE - if more than a specific number of duplicate codes is found an error will happen
alert.duplicatedCode.threshold=5
alert.duplicatedCode.enabled=false

# CAMERA IDLE - if operator started production and camera wasn't trigger for some time, an error is raised and
# production stops
alert.cameraIddle.maxInactiveTimeInSec=60
alert.cameraIddle.delayInSec=30
alert.cameraIddle.enabled=false

# PLC ACTIVATION CROSSCHECK - if the difference between the product sensor (sensor used by PLC to trigger devices)
# and product counter is bigger than the "maxDelta", an alert will be raised and an error will be displayed.
# Production will stop
alert.plcActivationCrossCheck.maxDelta=10
alert.plcActivationCrossCheck.enabled=false

# NO CAPS
alert.noCaps.enabled=true
alert.noCaps.delayInSec=5
alert.noCaps.threshold=5
alert.noCaps.sampleSize=10


# SCHEDULER CONFIG 
########################################

# how often we are saving products to disk
productionSerializationTimer_sec=5
# how often the products saved on disk are packaged, so they are ready to be sent to server
packagedProductTimer_sec=100
# how often we are sending the production data to the server
productionSendTimer_sec=300
# how often the SCL app requests the production parameters (SKU list) to the server
getProductionParametersTimer_sec=7200
# how often the SCL app requests the authenticator/decoder to the server
getAuthenticathorTimer_sec=7200
# how often the SCL app performs a deletion of old production data  in the "sent" folder which are older than 30 days
storageProductionCleanUp_sec=7200
# how often the SCL app retrieves the language files from server - non applicable for MA
getLanguageFilesTimer_sec=7200
# max number of seconds the SCL app can produce without connection to server
maxRemoteServerDownTimeTimer_sec=600
# how often we are saving the current production statistics to disk
saveStatisticsTimer_sec=60
# how often we are saving the incremental statistics to disk
monitoringSaveIncrementalStatisticsTimer_sec=300
# how often the SCL app sends monitoring data to server
globalMonitoringToolSendInfoTimer_sec=300
# how often the SCL app requests encoders to the server
getEncodersTimer_sec=300


# Production config folder
# This value must correspond to a production config folder within the $profile/config directory
# At the time of writing the two possible values were "productionConfig-SAS" or "productionConfig-SCL"
production.config.folder=productionConfig-SAS
