activation=com.sicpa.standard.sasscl.business.activation.impl.Activation
#used by the activation when production mode domestic/refeed normal is selected
standardActivationBehavior=com.sicpa.standard.sasscl.business.activation.impl.activationBehavior.standard.StandardActivationBehavior
#used by the activation when production mode export is selected
exportActivationBehavior=com.sicpa.standard.sasscl.business.activation.impl.activationBehavior.ExportActivationBehavior
#used by the activation when production mode maintenance is selected
maintenanceActivationBehavior=com.sicpa.standard.sasscl.business.activation.impl.activationBehavior.MaintenanceActivationBehavior
#used by the activation when production mode counting is selected
countingActivationBehavior=com.sicpa.standard.sasscl.business.activation.impl.activationBehavior.CountingActivationBehavior
#used by the activation when production mode refeed correction is selected
refeedActivationBehavior=com.sicpa.standard.sasscl.business.activation.impl.activationBehavior.RefeedActivationBehavior
#used by StandardActivationBehavior to validate the product, code type mismatch etc...
productValidator=com.sicpa.standard.sasscl.business.activation.impl.activationBehavior.standard.validator.CodeTypeValidator
#used by the StandardActivationBehavior, what to do with a bad code
activationInvalidCodeHandler=com.sicpa.standard.sasscl.business.activation.impl.activationBehavior.standard.invalidCode.DefaultActivationInvalidCodeHandler
#used by the StandardActivationBehavior, final last step of the valid code handling, default impl => check if status is error, if so send a message
productFinalizer=com.sicpa.standard.sasscl.business.activation.impl.activationBehavior.standard.finalize.DefaultProductFinalizerBehavior
#used by the activation as a pre activation action, filter duplicated code
activationCodeFilter=com.sicpa.standard.sasscl.business.activation.impl.beforeActivationAction.FilterDuplicatedCodeAction
#container of alert task
alert=com.sicpa.standard.sasscl.business.alert.impl.Alert

#contains the parameters of the application
globalConfig=com.sicpa.standard.sasscl.config.GlobalConfig
#contains the scheduler timer configuration
schedulerConfig=com.sicpa.standard.sasscl.controller.scheduling.SchedulerConfig

#container of devices group
otherDevicesController=com.sicpa.standard.sasscl.controller.device.impl.OtherDevicesController
#handle messages sent by businesses, by default stop on error, display message on warning
messagesHandler=com.sicpa.standard.sasscl.controller.message.MessagesHandler
warningHandler=com.sicpa.standard.sasscl.controller.message.MessageHandlerWarning
errorHandler=com.sicpa.standard.sasscl.controller.message.MessageHandlerError
errorDisplayHandler=com.sicpa.standard.sasscl.controller.message.MessageHandlerErrorDisplay


startStopView=com.sicpa.standard.sasscl.view.startstop.StartStopView
startStopViewController=com.sicpa.standard.sasscl.view.startstop.StartStopViewController
selectionChangeView=com.sicpa.standard.sasscl.view.selection.change.SelectionChangeView
selectionChangeViewController=com.sicpa.standard.sasscl.view.selection.change.SelectionChangeViewController
exitView=com.sicpa.standard.sasscl.view.exit.DefaultExitView
exitViewController=com.sicpa.standard.sasscl.view.exit.ExitViewController
optionsViewController=com.sicpa.standard.sasscl.view.option.OptionsViewController
optionsView=com.sicpa.standard.sasscl.view.option.DefaultOptionsView
messagesViewController=com.sicpa.standard.sasscl.view.messages.MessagesViewController
messagesView=com.sicpa.standard.sasscl.view.messages.DefaultMessagesView
questionView=com.sicpa.standard.sasscl.view.question.DefaultQuestionView
questionViewController=com.sicpa.standard.sasscl.view.question.QuestionViewController
systemInfoView=com.sicpa.standard.sasscl.view.main.systemInfo.SystemInfoView
systemInfoViewController=com.sicpa.standard.sasscl.view.main.systemInfo.SystemInfoViewController
statisticsView=com.sicpa.standard.sasscl.view.main.statistics.StatisticsView
statisticsViewController=com.sicpa.standard.sasscl.view.main.statistics.StatisticsViewController
selectionDisplayView=com.sicpa.standard.sasscl.view.selection.display.SelectionDisplayView
selectionDisplayViewController=com.sicpa.standard.sasscl.view.selection.display.SelectionDisplayViewController
mainPanelGetter=com.sicpa.standard.sasscl.view.main.MainPanelGetter
selectProductionParametersViewController=com.sicpa.standard.sasscl.view.selection.select.SelectProductionParametersViewController
selectProductionParametersHandPickingView=com.sicpa.standard.sasscl.view.selection.select.SelectProductionParametersHandPickingView
selectProductionParametersBarcodeView=com.sicpa.standard.sasscl.view.selection.select.SelectProductionParametersBarcodeView
snapshotViewController=com.sicpa.standard.sasscl.view.snapshot.SnapshotViewController
snapshotView=com.sicpa.standard.sasscl.view.snapshot.SnapshotView
productionSendingView=com.sicpa.standard.sasscl.view.productionSending.ProductionSendingView
productionSendingViewController=com.sicpa.standard.sasscl.view.productionSending.ProductionSendingViewController


screensFlow=com.sicpa.standard.sasscl.controller.view.flow.DefaultScreensFlow


printerFactoryMapping= com.sicpa.standard.sasscl.controller.productionconfig.factory.mapping.PrinterFactoryMapping
cameraFactoryMapping=com.sicpa.standard.sasscl.controller.productionconfig.factory.mapping.CameraFactoryMapping
codesProviderFactoryMapping=com.sicpa.standard.sasscl.controller.productionconfig.factory.mapping.CodesProviderFactoryMapping
qcFactoryMapping=com.sicpa.standard.sasscl.business.qc.impl.QCFactoryMapping
deviceFactory=com.sicpa.standard.sasscl.controller.productionconfig.factory.DeviceFactory
codesProviderFactory=com.sicpa.standard.sasscl.controller.productionconfig.factory.CodesProviderFactory
qcFactory=com.sicpa.standard.sasscl.business.qc.impl.QCFactory
implementationProvider=com.sicpa.standard.sasscl.controller.productionconfig.factory.utils.SpringImplementationProvider
productionInitiator=com.sicpa.standard.sasscl.controller.productionconfig.ProductionInitiator
deviceModelNamePostfixProperty=com.sicpa.standard.sasscl.controller.productionconfig.factory.utils.DeviceModelNamePostfixProperty
productionConfigLoader=com.sicpa.standard.sasscl.controller.productionconfig.loader.ProductionConfigFileLoader
productionConfigMapping=com.sicpa.standard.sasscl.controller.productionconfig.mapping.ProductionConfigMapping


plcValuesLoader=com.sicpa.standard.sasscl.devices.plc.variable.serialisation.PlcValuesLoader
plcRegisterHandler=com.sicpa.standard.sasscl.devices.plc.warningerror.PlcRegisterHandler
plcJmxInfo=com.sicpa.standard.sasscl.devices.plc.PlcJmxInfo

#state machine of the application
flowControl=com.sicpa.standard.sasscl.controller.flow.FlowControl
stateMachine=com.sicpa.standard.sasscl.controller.flow.statemachine.FlowControlStateMachine
flowControlWiring=com.sicpa.standard.sasscl.controller.flow.statemachine.DefaultFlowControlWiring
executorStarted=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorStarted
executorStarting=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorStarting
executorExit=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorExit
executorNoSelection=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorNoSelection
executorConnecting=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorConnecting
executorSelectWithPrevious=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorSelectWithPrevious
executorConnected=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorConnected
executorSelectNoPrevious=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorSelectNoPrevious
executorStopping=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorStopping
executorDisconnectingOnParamChanged=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorDisconnectingOnParamChanged
executorRecovering=com.sicpa.standard.sasscl.controller.flow.statemachine.executor.ExecutorRecovering

hardwareControllerStatusListener=com.sicpa.standard.sasscl.controller.flow.listener.HardwareControllerStatusListener
productionParameterChangedListener=com.sicpa.standard.sasscl.controller.flow.listener.ProductionParameterChangedListener
printerListener=com.sicpa.standard.sasscl.controller.flow.listener.PrinterListener



hardwareController=com.sicpa.standard.sasscl.controller.hardware.HardwareController

hwConnectedState=com.sicpa.standard.sasscl.controller.hardware.state.impl.ConnectedState
hwConnectingState=com.sicpa.standard.sasscl.controller.hardware.state.impl.ConnectingState
hwDisconnectedState=com.sicpa.standard.sasscl.controller.hardware.state.impl.DisconnectedState
hwDisconnectingState=com.sicpa.standard.sasscl.controller.hardware.state.impl.DisconnectingState
hwStartedState=com.sicpa.standard.sasscl.controller.hardware.state.impl.StartedState
hwStartingState=com.sicpa.standard.sasscl.controller.hardware.state.impl.StartingState
hwStoppingState=com.sicpa.standard.sasscl.controller.hardware.state.impl.StoppingState
deviceErrorRepository=com.sicpa.standard.sasscl.controller.hardware.DeviceErrorRepository

#the plcAdaptor
plcAdaptor=com.sicpa.standard.sasscl.devices.plc.impl.PlcAdaptor
plcSimulatorController=com.sicpa.standard.sasscl.devices.plc.simulator.PlcSimulatorController

#plc controller from the std component
stdPlcController=com.sicpa.standard.plc.controller.internal.PlcControllerImpl

plcPulseToMMConverterHandler=com.sicpa.standard.sasscl.devices.plc.variable.descriptor.converter.PlcPulseToMMConverterHandler

# PLC Secure
plcSecureController=com.sicpa.standard.plc.controller.internal.PlcControllerImpl
plcSecureAdaptor=com.sicpa.standard.sasscl.devices.plc.impl.PlcSecureAdaptor
plcSecureAdaptorSimulator=com.sicpa.standard.sasscl.devices.plc.simulator.PlcSecureAdaptorSimulator

#contains and handle the editable(from the gui) plc variable
editablePlcVariables=com.sicpa.standard.sasscl.devices.plc.variable.EditablePlcVariables
#what to do when a bean has been changed remotely
defaultSaveRemotelyChangedBeanTask=com.sicpa.standard.sasscl.monitoring.mbean.sas.DefaultSaveRemotelyUpdateBeanTask
#what to do when plc variables have been change remotely
plcVarSaveRemotelyChangedBeanTask=com.sicpa.standard.sasscl.devices.plc.variable.SavePlcVarRemotlyChanged
#detecting and processing of offline counting
offlineCounting=com.sicpa.standard.sasscl.business.activation.offline.impl.PlcOfflineCounting
offlineCountingTrigger=com.sicpa.standard.sasscl.business.activation.offline.impl.PlcOfflineCountingTrigger
#listener of the plc state, if application is in production and that the plc state goes to stop for whatever reason, the production will be stopped
plcStateListener=com.sicpa.standard.sasscl.devices.plc.PlcStateListener
#manage the serialisation and the sending of production
production=com.sicpa.standard.sasscl.business.production.impl.Production

stdRemoteServer=com.sicpa.standard.sasscl.devices.remote.impl.RemoteServer
remoteServerSimulator=com.sicpa.standard.sasscl.devices.remote.simulator.RemoteServerSimulatorNoCoding
#scheduled job related to the remote server, like getting the encoder periodically
remoteServerSheduledJobs=com.sicpa.standard.sasscl.controller.scheduling.RemoteServerScheduledJobs
#manage the grouping together product of the same status
productPackager=com.sicpa.standard.sasscl.common.storage.productPackager.DefaultProductsPackager
#populate field when generating sicpadata and retrieved field value when reading sicpadata
cryptoFieldsConfig=com.sicpa.standard.sasscl.devices.remote.stdCrypto.CryptoFieldsConfig
#mapping between sasscl client product statuses and dms ones
remoteServerProductStatusMapping=com.sicpa.standard.sasscl.devices.remote.impl.statusmapping.DefaultRemoteServerProductStatusMapping
#mapping between sasscl client production mode id and dms one
productionModeMapping=com.sicpa.standard.sasscl.devices.remote.impl.productionmodemapping.DefaultProductionModeMapping

#listen to new product created by the activation process and increase its internal counter
statistics=com.sicpa.standard.sasscl.business.statistics.impl.Statistics
statisticsKeyToViewDescriptorMapping=com.sicpa.standard.sasscl.view.main.statistics.StatisticsKeyToViewDescriptorMapping
#mapping between product status and the statistics counter to increase
productStatusToStatisticsKeyMapper=com.sicpa.standard.sasscl.business.statistics.mapper.DefaultProductStatusToStatisticsKeyMapper

resetStatisticsAtEachProductionStart=com.sicpa.standard.sasscl.controller.flow.statisticsBehavior.ResetStatisticsAtEachProductionStart

#controller of the mainframe
mainFrameController=com.sicpa.standard.sasscl.view.MainFrameController
reportScreen=com.sicpa.standard.sasscl.view.report.ReportScreenGetter
systemEventPanel=com.sicpa.standard.sasscl.view.monitoring.SystemEventPanelGetter
miscPanel=com.sicpa.standard.sasscl.view.config.misc.MiscConfigPanelGetter
mainFrame=com.sicpa.standard.sasscl.view.MainFrameGetter
plcVariablesPanel=com.sicpa.standard.sasscl.view.config.plc.PlcVariablesPanelGetter
#factory that handle the creation of the production parameters selection model
selectionModelFactory=com.sicpa.standard.sasscl.productionParameterSelection.DefaultSelectionModelFactory
beanCallPanelGetter=com.sicpa.standard.sasscl.view.forceCall.BeanCallPanelGetter
productionStatisticsPanel=com.sicpa.standard.sasscl.view.monitoring.ProductionStatisticsPanelGetter

barcodeReader=com.sicpa.standard.sasscl.devices.barcode.BarcodeReaderAdaptorAsKeyboard

#mapping between messages and their criticality
messagesMapping=com.sicpa.standard.sasscl.messages.SASDefaultMessagesMapping

storage=com.sicpa.standard.sasscl.common.storage.FileStorage
#how to store
storageBehavior=com.sicpa.standard.sasscl.common.storage.xstream.XStreamFileStorage

#what to do with an uncaughexception
exceptionHandler=com.sicpa.standard.sasscl.common.exception.ExceptionHandler

monitoring=com.sicpa.standard.sasscl.monitoring.impl.Monitoring
#how to store monitoring event
monitoringModel=com.sicpa.standard.sasscl.monitoring.impl.DefaultMonitoringSerializerMapping

securityModel=com.sicpa.standard.client.common.security.SecurityModel
securityController=com.sicpa.standard.client.common.security.SecurityController

#jmx remote control
remoteControlMBean=com.sicpa.standard.sasscl.monitoring.mbean.sas.RemoteControlSas
#jmx read only
statsMBean=com.sicpa.standard.sasscl.monitoring.mbean.sas.SasApp
#statistics that populate the jmx read only bean
MBeanStatsDelegate=com.sicpa.standard.sasscl.monitoring.mbean.sas.SasAppBeanStatistics
MBeanViewer=com.sicpa.standard.sasscl.view.monitoring.mbean.MBeanViewerGetter

#send a message if the camera doesn't read a code for a while
alertCameraIddle=com.sicpa.standard.sasscl.devices.camera.alert.CameraIddleAlertTask
#send a message if duplicated codes are detected
alertDuplicatedCode=com.sicpa.standard.sasscl.devices.camera.alert.DuplicatedCodeAlertTask
#send a message when too many bad codes
alertCameraCount=com.sicpa.standard.sasscl.devices.camera.alert.CameraCountAlertTask
#Send a message if the counter between of activation and product detected are different
alertPlcActivationCrossCheckTask=com.sicpa.standard.sasscl.business.activation.PlcActivationCounterCheck

cameraSimulatorController=com.sicpa.standard.sasscl.devices.camera.simulator.CameraSimulatorController
#camera controller from the std component  
stdCameraController=com.sicpa.standard.camera.controller.internal.CognexCameraControllerImpl
#camera adaptor
stdCameraAdaptor=com.sicpa.standard.sasscl.devices.camera.CameraAdaptor
cameraSimulatorAdaptor=com.sicpa.standard.sasscl.devices.camera.simulator.CameraAdaptorSimulator

cameraImageRotator=com.sicpa.standard.sasscl.devices.camera.transformer.CameraImageRotator
cropImageTransformer=com.sicpa.standard.sasscl.devices.camera.transformer.CropImageTransformer
cameraRoiImageTransformer=com.sicpa.standard.sasscl.devices.camera.transformer.OneAreaRoiImageTransformer



#mapping between production parameter and camera job
cameraJobFilesConfig=com.sicpa.standard.sasscl.devices.camera.jobconfig.CameraJobFilesConfig

#check since when the remote server is down
maxRemoteServerDownTimeListener=com.sicpa.standard.sasscl.controller.flow.listener.MaxRemoteServerDownTimeListener

#check if the selected production parameters are still available before starting the production
parametersAvailableStartValidator=com.sicpa.standard.sasscl.controller.flow.validator.ParametersAvailableStartValidator

#list of task to execute after spring initialization
applicationInitializationTasks=com.sicpa.standard.sasscl.ApplicationInitializationTasks
#new crypto, contains the password of the current encoder
encoderPasswordProvider=com.sicpa.standard.sicpadata.spi.password.UniquePasswordProvider
#new crypto, contains all services needed for the crypto
cryptoProviderManager=com.sicpa.standard.sasscl.sicpadata.CryptoServiceProviderManager
#new crypto, storage for the encoders sequence
fileSequenceStorageProvider=com.sicpa.standard.sasscl.sicpadata.generator.FileSequenceStorageProvider

eventBus=com.sicpa.standard.sasscl.eventbus.EventBusWithUncaughtExceptionHandling
deadEventListener=com.sicpa.standard.client.common.eventbus.impl.DeadEventListener


productionParameters=com.sicpa.standard.sasscl.model.ProductionParameters
skuListProvider=com.sicpa.standard.sasscl.provider.impl.SkuListProvider
authenticatorProvider=com.sicpa.standard.sasscl.provider.impl.AuthenticatorProvider
productionBatchProvider=com.sicpa.standard.sasscl.provider.impl.ProductionBatchProvider
plcProvider=com.sicpa.standard.sasscl.provider.impl.PlcProvider
authenticatorModeProvider=com.sicpa.standard.sasscl.provider.impl.AuthenticatorModeProvider
productionConfigProvider=com.sicpa.standard.sasscl.provider.impl.ProductionConfigProvider
activationBehaviorProvider=com.sicpa.standard.sasscl.provider.impl.ActivationBehaviorProvider
codingConfigProvider=com.sicpa.standard.sasscl.provider.impl.CodingConfigProvider
codingConfig=com.sicpa.standard.sasscl.business.coding.CodingConfig
qcContextProvider=com.sicpa.standard.sasscl.provider.impl.QCContextProvider
subsystemIdProvider=com.sicpa.standard.sasscl.provider.impl.SubsystemIdProvider

#contains the editable property that will be display on the gui for each model bean, camera/printer/plc/global/etc...
modelEditableProperties=com.sicpa.standard.client.common.descriptor.ModelEditableProperties

encodersInfoViewGetter=com.sicpa.standard.sasscl.view.encoder.EncodersInfoViewGetter
#handle treelight when remote sever is disconnected
plcRemoteServerConnectionHandler=com.sicpa.standard.sasscl.devices.plc.remoteserver.PlcRemoteServerConnectionHandler

#log config changes
beanHistoryManager=com.sicpa.standard.sasscl.config.DefaultBeanHistoryManager

#xstream config for common model
xstreamConfiguratorCommonModel=com.sicpa.standard.sasscl.config.xstream.CommonModelXStreamConfigurator
remoteServerSimulatorXStreamConfigurator=com.sicpa.standard.sasscl.devices.remote.RemoteServerSimulatorXStreamConfigurator
remoteServerXStreamConfigurator=com.sicpa.standard.sasscl.devices.remote.impl.RemoteServerXStreamConfigurator
cameraXStreamConfigurator=com.sicpa.standard.sasscl.devices.camera.CameraXStreamConfigurator
plcXStreamConfigurator=com.sicpa.standard.sasscl.devices.plc.PlcXStreamConfigurator
productionConfigXstreamConfigurator=com.sicpa.standard.sasscl.controller.productionconfig.xstream.ProductionConfigXstreamConfigurator

#logger
operatorLoggerBehavior=com.sicpa.standard.sasscl.common.log.OperatorLoggerBehavior

customizablePropertyDefinition=com.sicpa.standard.sasscl.model.custom.CustomizablePropertyDefinition

errorsRepository=com.sicpa.standard.sasscl.repository.errors.ErrorsRepository

#storage impl for the sicpa data fail over lib for std dms
sicpaDataGeneratorStorage=com.sicpa.standard.sasscl.devices.remote.impl.sicpadata.SicpaDataGeneratorStorage
#encoder requestor for std dms
sicpaDataGeneratorRequestor=com.sicpa.standard.sasscl.devices.remote.impl.sicpadata.SicpaDataGeneratorRequestor

#bis adaptor
bis=com.sicpa.standard.sasscl.devices.bis.BisAdapter
bisSkuCheckFacadeProvider=com.sicpa.standard.sasscl.devices.bis.SkuCheckFacadeProvider
bisRemoteServer=com.sicpa.standard.sasscl.devices.bis.controller.BisRemoteServer
bisUnreadSkuHandler=com.sicpa.standard.sasscl.devices.bis.skucheck.UnreadSkuHandler

eventBusAutoRegistering=com.sicpa.standard.client.common.eventbus.service.AutoEventBusRegistering

globalStartProductionValidator=com.sicpa.standard.client.common.controller.predicate.start.GlobalStartProductionValidator


#qc module
qcReader=com.sicpa.standard.sasscl.business.qc.reader.DefaultQCReader
defaultQC=com.sicpa.standard.sasscl.business.qc.impl.DefaultQualityCheck
defaultQCComponent=com.sicpa.standard.sasscl.business.qc.impl.DefaultQCComponent
defaultQCPolicy=com.sicpa.standard.sasscl.business.qc.impl.DefaultQCPolicy

remoteLifeChecker=com.sicpa.standard.sasscl.devices.remote.impl.RemoteServerLifeChecker
timeoutAspect=com.sicpa.standard.client.common.timeout.TimeoutAspect

#code type filter
codeTypeFilterFactory=com.sicpa.standard.sasscl.filter.DefaultCodeTypeFilterFactory
